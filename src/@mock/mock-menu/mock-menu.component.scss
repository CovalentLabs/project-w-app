// MockStateSelectorComponent Styles

// styles applied on :host are applied on the current component, "app" in this case
:host {
  display: block;
}

.mock {
  color: black;

  .open, .dropup {
    background: whitesmoke;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  }

  .open {
    line-height: 1;
    text-align: center;
    padding: 8px;
    border-radius: 20px;
    margin-bottom: 10px;
    font-size: 20px;
    height: 36px;
    width: 36px;
    user-select: none;
    cursor: pointer;

    &.active-open {
      background: silver;
    }
  }

  .toolbar {
    bottom: 30%;
    position: absolute;
    right: 20px;
    z-index: 9995;
  }

  .close-modal {
    display: block;
    background: #dbdbdb;
  }

  .debug-state {
    pointer-events: none;
    opacity: 1;
    background: rgba(255,255,255,0.7);
    pre { color: black; font-weight: bold; }
    text-shadow: white 0 0 1px;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;

    z-index: 9990;
  }

  .dropup {
    pointer-events: none;
    opacity: 0;

    z-index: 9999;
    position: absolute;
    top: 10px;
    right: 20px;
    bottom: 10px;
    overflow: auto;
    width: 220px;

    .lang {
      padding: 6px;
      display: inline-block;
      &:hover {
        background: rgb(190, 230, 75);
      }
    }

    > .title {
      font-size: .8em;
      font-weight: bold;
      color: black;
      text-transform: uppercase;
    }

    /*
    // Use these for indicating special mock states...
    [data-mock-key=WhitelistedSignedUpBeta],
    [data-mock-key=RankingNotSubmitted],
    [data-mock-key=PreppingNotOpened] {
      background: rgba(255, 250, 0, 0.2);
    }
    [data-mock-key=PreppingOpened] {
      background: rgba(255, 250, 0, 0.4);
    }
    */

    > div {
      padding: 6px;
      padding-left: 4px;
      border-bottom: 1px solid #d9d6cf;
    }
    > a {
      padding: .5em;
      display: block;
      text-decoration: none;
      border-bottom: 1px solid #d9d6cf;

      &:visited {
        color: blue;
      }
    }

    transition: opacity .2s;

    &.show {
      opacity: 1;
      pointer-events: all;
    }
  }
}
